<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36" version="28.0.7">
  <diagram name="Page-1" id="M8_VWo9m_ZNQW_kMiXNB">
    <mxGraphModel dx="898" dy="1755" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="UZGsrQagEl5h_SZRngAT-1" value="Functional Requirements&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;6. List down all the APIs needed&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- Top products&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- Deals and Offers - depends on how much big the quantity of all the products listed on the api are&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;-&amp;nbsp; sign in authentication&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;- search bar api for all products&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;- API for adding to cart&amp;nbsp;&lt;/div&gt;&lt;div&gt;7. List of locations - to be displayed on the navbar&lt;/div&gt;&lt;div&gt;8. breadcrumb expandable for all type of products router link on the left side&lt;/div&gt;&lt;div&gt;9 breadcrumb expandable for user porfile sign&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;in&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;10 Image carousel for banners of offers and sales of top products&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;11. search bar autocomplete suggestion&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;12. Top products and offers shows&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;-&amp;nbsp; Use Card element to show the add to cart button&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;13. Display Total items in cart added&lt;/div&gt;&lt;div&gt;14 Display modal component for displaying locations&lt;/div&gt;&lt;div&gt;15. Use Static Site Generation for displaying components which are static and lazy loading for displaying products for better customer experience&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="120" y="60" width="290" height="210" as="geometry" />
        </mxCell>
        <mxCell id="UZGsrQagEl5h_SZRngAT-2" value="Non Functional Requirements&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;6. Choose hosting for AWS&lt;/div&gt;&lt;div&gt;7. Use Provisioned Capacity for the initial phase&lt;/div&gt;&lt;div&gt;8. Estimate for the first six months - 10000 customers/month&amp;nbsp;&lt;/div&gt;&lt;div&gt;9. Latency should be less than 4 seconds for home page full display&lt;/div&gt;&lt;div&gt;10. Duplicate the server in another host in case server is down&lt;/div&gt;&lt;div&gt;11. Choose domain name matching brand standard&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="510" y="60" width="290" height="210" as="geometry" />
        </mxCell>
        <mxCell id="UZGsrQagEl5h_SZRngAT-7" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="UZGsrQagEl5h_SZRngAT-3" target="UZGsrQagEl5h_SZRngAT-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="UZGsrQagEl5h_SZRngAT-3" value="Client" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="410" y="2040" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="UZGsrQagEl5h_SZRngAT-6" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="UZGsrQagEl5h_SZRngAT-4" target="UZGsrQagEl5h_SZRngAT-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="UZGsrQagEl5h_SZRngAT-4" value="API" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="650" y="2040" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="UZGsrQagEl5h_SZRngAT-5" value="UI" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="180" y="2040" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="UZGsrQagEl5h_SZRngAT-8" value="First,&amp;nbsp;&lt;div&gt;1. Mock UI of homepage&lt;/div&gt;&lt;div&gt;2. Design the UI skeleton&lt;/div&gt;&lt;div&gt;3. React App Set up&lt;/div&gt;&lt;div&gt;4. incude eslint for removing unused variables and probable errors&lt;/div&gt;&lt;div&gt;5. install dependencies - bootstrap&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="340" y="390" width="400" height="90" as="geometry" />
        </mxCell>
        <mxCell id="UZGsrQagEl5h_SZRngAT-9" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;Search Bar&lt;/h1&gt;&lt;p&gt;1. Normal Search input bar with search icon at the right&lt;/p&gt;&lt;p&gt;2. On the input, onChange event.target.value is captured by state hooks&lt;/p&gt;&lt;p&gt;3. This the inputText state value is push to fetched Product names and it shows a dropdown list of matching products from the search&lt;/p&gt;&lt;p&gt;4. If we click on any of the drop down text, we are rerouted to the product details page&lt;/p&gt;&lt;p&gt;5. Optimisation: We can use debounce to change the state hooks value after a timeout of 3 ms. This will reduce in calling unnceccasry api calls&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;debounce code looks like this&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;function&amp;nbsp; debounce(fn, delay){&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;let timerId = null&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;return function(...args){&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;clearTimeout(timerId)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;timerId = setTimeout(() =&amp;gt; {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;fn.apply(this, args)&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;}, delay)&#x9;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;}&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;6. If no text matches from the api product listing, show a text message no products found in z-index of 1&lt;/span&gt;&lt;/p&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="180" y="585" width="600" height="545" as="geometry" />
        </mxCell>
        <mxCell id="UZGsrQagEl5h_SZRngAT-10" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;Ecommerce Home page design&lt;/h1&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="300" y="-170" width="310" height="120" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
